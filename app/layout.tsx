import FlagsProvider from "@/components/flags-provider";
import { lightThemeFlag, showNotesFlag } from "@/lib/flags";
import { VercelToolbar } from "@vercel/toolbar/next";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Tomas' Presentations",
  description: "Presentations generated by Tomas Jansson",
};
import { FlagValues } from "flags/react";
import { encryptFlagValues, FlagValuesType } from "flags";

async function ConfidentialFlagValues({ values }: { values: FlagValuesType }) {
  const encryptedFlagValues = await encryptFlagValues(values);
  return <FlagValues values={encryptedFlagValues} />;
}

// const Ahrefs = () => {
//   return (
//     <>
//       <Script
//         src="https://analytics.ahrefs.com/analytics.js"
//         data-key="rwlSgvjWEChwwJmpP/rIKQ"
//         async
//       ></Script>
//     </>
//   );
// };

const GooleVerification = () => {
  return (
    <>
      <meta
        name="google-site-verification"
        content="4MPryxTfeXv58y_a9eoHejRiMj4yeWiRkGxCXnibBsc"
      />
    </>
  );
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const showNotes = await showNotesFlag();
  const lightTheme = await lightThemeFlag();
  const isDevelopment = process.env.NODE_ENV === "development";
  return (
    <html lang="en" className={lightTheme ? "light" : "dark"}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-background text-foreground h-screen w-screen`}
      >
        <FlagsProvider flags={{ showNotes }}>
          {children}
          <div className="z-index-50">{isDevelopment && <VercelToolbar />}</div>
        </FlagsProvider>
        <ConfidentialFlagValues
          values={{ "show-notes": showNotes, "light-theme": lightTheme }}
        />
        {/* <Ahrefs /> */}
        <GooleVerification />
      </body>
    </html>
  );
}
